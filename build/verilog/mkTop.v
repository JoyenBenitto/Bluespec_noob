//
// Generated by Bluespec Compiler, version 2024.01-8-g388a61e0 (build 388a61e0)
//
// On Tue May 28 11:04:39 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// RDY_acc                        O     1 const
// RDY_reset_acc                  O     1 const
// read_y                         O    16
// RDY_read_y                     O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// acc_aa                         I    16
// acc_bb                         I    16
// reset_acc_value                I    16
// EN_acc                         I     1
// EN_reset_acc                   I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkTop(CLK,
	     RST_N,

	     acc_aa,
	     acc_bb,
	     EN_acc,
	     RDY_acc,

	     reset_acc_value,
	     EN_reset_acc,
	     RDY_reset_acc,

	     read_y,
	     RDY_read_y);
  input  CLK;
  input  RST_N;

  // action method acc
  input  [15 : 0] acc_aa;
  input  [15 : 0] acc_bb;
  input  EN_acc;
  output RDY_acc;

  // action method reset_acc
  input  [15 : 0] reset_acc_value;
  input  EN_reset_acc;
  output RDY_reset_acc;

  // value method read_y
  output [15 : 0] read_y;
  output RDY_read_y;

  // signals for module outputs
  wire [15 : 0] read_y;
  wire RDY_acc, RDY_read_y, RDY_reset_acc;

  // ports of submodule ifc
  wire [15 : 0] ifc$a, ifc$b, ifc$clear_value, ifc$out;
  wire ifc$EN, ifc$clear;

  // action method acc
  assign RDY_acc = 1'd1 ;

  // action method reset_acc
  assign RDY_reset_acc = 1'd1 ;

  // value method read_y
  assign read_y = ifc$out ;
  assign RDY_read_y = 1'd1 ;

  // submodule ifc
  my_mac ifc(.clk(CLK),
	     .rst_b(RST_N),
	     .a(ifc$a),
	     .b(ifc$b),
	     .clear_value(ifc$clear_value),
	     .EN(ifc$EN),
	     .clear(ifc$clear),
	     .out(ifc$out));

  // submodule ifc
  assign ifc$a = acc_aa ;
  assign ifc$b = acc_bb ;
  assign ifc$clear_value = reset_acc_value ;
  assign ifc$EN = EN_acc ;
  assign ifc$clear = EN_reset_acc ;
endmodule  // mkTop

